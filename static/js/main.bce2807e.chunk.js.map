{"version":3,"sources":["actions/hubAction.js","actions/actionTypes.js","containers/Main.js","containers/People.js","containers/App.js","serviceWorker.js","reducers/pageReducer.js","reducers/index.js","store.js","index.js","React.svg","Google.svg"],"names":["setFaceBook","dispatch","type","setGoogle","getUsers","fetch","then","response","json","data","getTodos","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","isReact","setDatabase","showPeople","state","_this$props","classes","isReactFlag","react_default","a","createElement","Redirect","to","className","src","react_logo","alt","google_logo","Button_default","facebookButton","onClick","googleButton","href","target","rel","Component","PropTypes","object","isRequired","compose","withStyles","loading","height","width","display","position","alignItems","justifyContent","root","color","gridColumn","connect","pageReducer","bindActionCreators","People","RestApi","console","log","Button_Button_default","userButton","todoButton","Table_default","table","TableHead_default","TableCell_default","numeric","TableBody_default","map","row","TableRow_default","key","id","component","scope","name","email","address","zipcode","title","completed","theme","marginTop","spacing","unit","overflowX","minWidth","App","Switch","Route","exact","path","styles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","arguments","length","undefined","action","objectSpread","rootReducer","combineReducers","router","routerReducer","history","createHistory","middleware","thunk","routerMiddleware","createLogger","composedEnhancers","apply","applyMiddleware","concat","createStore","createMuiTheme","ReactDOM","render","react_redux_es","store","react_router_redux_es","containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bce2807e.chunk.js","sourcesContent":["import * as types from './actionTypes'\r\n\r\nexport const setFaceBook = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.API_REACT });\r\n    };\r\n}\r\n\r\nexport const setGoogle = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: types.API_ANGULAR });\r\n    };\r\n}\r\n\r\nexport const getUsers  = () => {\r\n    return (dispatch) => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            // .then(json => {this.setState({rows:[createUser(json.name)]})})\r\n            // .then(json => {var temp_rows=[];json.map(user => {temp_rows.push(createUser(user.name));}); this.setState({rows:temp_rows});})\r\n            .then(json => {dispatch({ type: types.API_GETUSER, json:json, data:true })})\r\n    };\r\n}\r\n\r\n\r\nexport const getTodos  = () => {\r\n    return (dispatch) => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos')\r\n            .then(response => response.json())\r\n            .then(json => {dispatch({ type: types.API_GETTODOS, json:json, data:false })})\r\n    };\r\n}\r\n","export const API_REACT = \"API_REACT\";\r\nexport const API_ANGULAR = \"API_ANGULAR\";\r\n\r\nexport const API_GETUSER = \"API_GETUSER\";\r\nexport const API_GETTODOS = \"API_GETTODOS\";","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport { Route, Link, Redirect } from 'react-router-dom'\r\nimport react_logo from \"../React.svg\";\r\nimport google_logo from \"../Google.svg\"\r\nimport compose from 'recompose/compose';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { setFaceBook, setGoogle } from '../actions/hubAction'\r\n\r\nimport '../App.css';\r\n\r\nconst styles = {\r\n    loading: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'grid',\r\n        position: 'fixed',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    root: {\r\n        // display: 'grid'\r\n    },\r\n\r\n    facebookButton: {\r\n        // borderStyle: 'solid',\r\n        color:'green',\r\n        gridColumn: 2,\r\n    },\r\n\r\n    googleButton: {\r\n        // borderStyle: 'solid',\r\n        color:'red',\r\n        gridColumn: 3,\r\n    },\r\n};\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.props.checkPageStatus();\r\n        this.state = {\r\n            isReact: true,\r\n            showPeople : false\r\n        };\r\n    }\r\n\r\n    setFaceBook = () => {\r\n        // this.props.setFaceBook();\r\n        this.setState({isReact:true});\r\n    }\r\n\r\n    setGoogle = () => {\r\n        // this.props.setGoogle();\r\n        this.setState({isReact:false});\r\n    }\r\n\r\n    setDatabase = () => {\r\n        this.setState({showPeople:true})\r\n    }\r\n\r\n    render() {\r\n        const {classes, isReact} = this.props;\r\n\r\n        const isReactFlag = this.state.isReact;\r\n        const showPeopleFlag = this.state.showPeople;\r\n\r\n        if (showPeopleFlag)\r\n        {\r\n            return (<Redirect to=\"/People\" />);\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        {isReactFlag ? <img src={react_logo} className=\"App-logo\" alt=\"logo\"/> :\r\n                            <img src={google_logo} className=\"App-logo\" alt=\"logo\"/>\r\n                        }\r\n                        <p>\r\n                            <Button className={classes.facebookButton} onClick={this.setFaceBook}> Show React </Button>\r\n                            <Button className={classes.googleButton} onClick={this.setGoogle}> Show Google </Button>\r\n                            <Button className={classes.googleButton} onClick={this.setDatabase}> Show Database </Button>\r\n                        </p>\r\n                        {isReactFlag ?\r\n                            <a\r\n                                className=\"App-link\"\r\n                                href=\"https://reactjs.org\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                Learn React\r\n                            </a>\r\n                            :\r\n                            <a\r\n                                className=\"App-link\"\r\n                                href=\"https://angular.org\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                Learn Angular\r\n                            </a>\r\n                        }\r\n                    </header>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nMain.PropTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({ setFaceBook, setGoogle }, dispatch)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isReact: state.pageReducer.isReact,\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Main);","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport {Api as RestApi} from \"rest-api-handler\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles }  from '@material-ui/core/styles';\r\n// import { withStyles } from 'material-ui/styles';\r\nimport {getUsers} from '../actions/hubAction'\r\nimport {getTodos} from '../actions/hubAction'\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport compose from \"recompose/compose\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nconst api = new RestApi('https://jsonplaceholder.typicode.com');\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    userButton: {\r\n        // borderStyle: 'solid',\r\n        color:'green',\r\n        gridColumn: 2,\r\n    },\r\n   todoButton: {\r\n        // borderStyle: 'solid',\r\n        color:'red',\r\n        gridColumn: 3,\r\n    },\r\n});\r\n\r\nclass People extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.state = {\r\n        //     rows: this.props.users\r\n        // };\r\n\r\n\r\n    }\r\n\r\n    getUsers = () => {\r\n        this.props.getUsers();\r\n    }\r\n\r\n    getTodos = () => {\r\n        this.props.getTodos();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {classes, json, data} = this.props;\r\n        console.log(json);\r\n        return (\r\n            <div className=\"People\">\r\n                <header className=\"People-header\">\r\n                    <p>\r\n                        <Button className={classes.userButton} onClick={this.getUsers}> Show Users </Button>\r\n                        <Button className={classes.todoButton} onClick={this.getTodos}> Show Todos </Button>\r\n                    </p>\r\n                    <a\r\n                        className=\"People-link\"\r\n                       href=\"https://www.leapagency.com/about/our-experts\"\r\n                       target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                    >\r\n                        {/*user_content*/}\r\n                    </a>\r\n                    {data?\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell numeric>ZipCode</TableCell>\r\n                            {/*<TableCell numeric>Carbs (g)</TableCell>*/}\r\n                            {/*<TableCell numeric>Protein (g)</TableCell>*/}\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {json.map(row => {\r\n                                return (\r\n                                    <TableRow key={row.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell>{row.email}</TableCell>\r\n                                        <TableCell numeric>{row.address.zipcode}</TableCell>\r\n                                        {/*<TableCell numeric>{row.carbs}</TableCell>*/}\r\n                                        {/*<TableCell numeric>{row.protein}</TableCell>*/}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                        :\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <TableCell>Title</TableCell>\r\n                            <TableCell>Completed</TableCell>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {json.map(row => {\r\n                                return (\r\n                                    <TableRow key={row.id}>\r\n                                        <TableCell>{row.title}</TableCell>\r\n                                        <TableCell>{row.completed}?X:Y</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                    }\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nPeople.PropTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({ getUsers, getTodos }, dispatch)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        json: state.pageReducer.json,\r\n        data:state.pageReducer.data\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(People);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Main from './Main'\r\nimport People from './People'\r\n\r\nconst styles = {\r\n    root: {\r\n        // display: 'grid'\r\n    },\r\n\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route exact path=\"/People\" component={People} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.PropTypes = {\r\n    styles: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    isReact: true,\r\n    json: [],\r\n    data: true\r\n};\r\n\r\nconst pageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.API_REACT: {\r\n            return {\r\n                ...state,\r\n                isReact: true\r\n            };\r\n        }\r\n        case types.API_ANGULAR: {\r\n            return {\r\n                ...state,\r\n                isReact: false\r\n            };\r\n        }\r\n\r\n        case types.API_GETUSER:{\r\n            return {\r\n                ...state,\r\n                json: action.json,\r\n                data: true\r\n            }\r\n        }\r\n\r\n        case types.API_GETTODOS:{\r\n            return {\r\n                ...state,\r\n                json: action.json,\r\n                data:false\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default pageReducer;","import {combineReducers} from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport pageReducer from './pageReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    router: routerReducer,\r\n    pageReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from './reducers'\r\nimport {createLogger} from \"redux-logger\"\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history),\r\n  createLogger()\r\n]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.devToolsExtension\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension())\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store, {history}  from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n// import Reboot from '@material-ui/';\r\n// import { Router} from 'react-router';\r\n// import { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme(\r\n    // {\r\n    //     palette: {\r\n    //         primary: \"#ff0000\",\r\n    //         secondary: \"#ff0000\",\r\n    //         error: \"#ff0000\",\r\n    //     },\r\n    // }\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <MuiThemeProvider  theme={theme}>\r\n        <ConnectedRouter history={history} >\r\n            <div>\r\n                {/*<Reboot />*/}\r\n                <App />\r\n            </div>\r\n        </ConnectedRouter>\r\n        </MuiThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// ReactDOM.render(\r\n//         <BrowserRouter history={history} >\r\n//             <App />\r\n//         </BrowserRouter>,\r\n//     document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/React.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/Google.686f8efa.svg\";"],"sourceRoot":""}